type NftMetadata {
    url: String
    icon: String
    desc: String
}

type NftProperty {
    authorizedEditingAccounts: [String]
    authorizedEditingContracts: [String]
    isReadOnly: Boolean!
    name: String!
    type: String!
}

type Nft {
    _id: Int!
    issuer: String!
    symbol: String!
    name: String!
    metadata: NftMetadata
    maxSupply: BigInt!
    supply: BigInt!
    circulatingSupply: BigInt
    delegationEnabled: Boolean!
    undelegationCooldown: Int!
    authorizedIssuingAccounts: [String]
    authorizedIssuingContracts: [String]
    properties: [NftProperty],
    groupBy: [String]
    orders: [NftSell]
}

type NftDelegatee {
    account: String!
    ownedBy: String!
    undelegateAt: Int
}

type NftInstance {
    _id: Int!
    account: String
    ownedBy: String
    lockedTokens: Tuple
    properties: Tuple
    delegatedTo: NftDelegatee
}

type UserNftInstance {
    _id: Int!
    account: String
    ownedBy: String
    lockedTokens: Tuple
    properties: Tuple
    delegatedTo: NftDelegatee
    symbol: String
}

type NftSell {
    _id: Int!
    account: String!
    ownedBy: String!
    nftId: String!
    grouping: Tuple!
    timestamp: BigInt!
    price: String!
    priceDec: Tuple!
    priceSymbol: String!
    fee: Int!
}

type NftCounterparty {
    account: String!
    ownedBy: String!
    nftIds: [String]
    paymentTotal: String!
}

type NftTrade {
    _id: Int!
    type: String!
    account: String!
    ownedBy: String!
    counterparties: [NftCounterparty]
    priceSymbol: String!
    price: String!
    marketAccount: String!
    fee: String!
    timestamp: BigInt!
    volume: BigInt!
}

type NftInterest {
    _id: Int!
    side: String!
    priceSymbol: String!
    grouping: Tuple!
    count: Int!
}

type NftParam {
    nftCreationFee: Int!
    nftIssuanceFee: Tuple!
    dataPropertyCreationFee: Int!
    enableDelegationFee: Int!
}

type Query {
    nfts(account: String, limit: Int, offset: Int): [Nft]
    nft(symbol: String!): Nft
    userNfts(account: String!, limit: Int, offset: Int): [UserNftInstance]
    nftParams: NftParam
    instances(symbol: String!, account: String): [NftInstance]
    nftSellBook(symbol: String!, limit: Int, offset: Int): [NftSell]
    nftTradesHistory(symbol: String!, limit: Int, offset: Int): [NftTrade]
    nftOpenInterest(symbol: String!, limit: Int, offset: Int): [NftInterest]
}