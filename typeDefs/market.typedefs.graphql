type Buybook {
    txId: String!
    timestamp: Int!
    account: String!
    symbol: String!
    quantity: String!
    price: String!
    tokensLocked: String!
    expiration: Int!
}

type Sellbook {
    txId: String!
    timestamp: Int!
    account: String!
    symbol: String!
    quantity: String!
    price: String!
    expiration: Int!
}

type TradesHistory {
    type: String!
    symbol: String!
    quantity: String!
    price: String!
    timestamp: Int!
}

type Metric @cacheControl(maxAge: 10) {
    symbol: String
    volume: Float
    volumeExpiration: Int
    lastPrice: Float
    lowestAsk: Float
    highestBid: Float
    lastDayPrice: Float
    lastDayPriceExpiration: Int
    priceChangeSteem: Float
    priceChangePercent: String
    marketCap: Float
}

type History {
    _id: String!
    timestamp: Int!
    symbol: String!
    volumeSteem: String!
    volumeToken: String!
    lowestPrice: String!
    highestPrice: String!
    openPrice: String!
    closePrice: String!
}

type Query {
    buyBook(symbol: String!, account: String, limit: Int, offset: Int): [Buybook!]
    sellBook(symbol: String!, account: String, limit: Int, offset: Int): [Sellbook!]
    tradesHistory(symbol: String!, limit: Int, offset: Int): [TradesHistory!]
    metrics(limit: Int, offset: Int, symbol: String, symbols: [String]): [Metric!]
    marketHistory(symbol: String!, timestampStart: Int, timestampEnd: Int): [History!]
}